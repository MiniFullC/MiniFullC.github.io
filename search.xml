<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>使用 woof 在局域网内快速共享文件</title>
      <link href="/2018/04/19/%E4%BD%BF%E7%94%A8%20woof%20%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E5%BF%AB%E9%80%9F%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/"/>
      <content type="html"><![CDATA[<p>接入网络，与其他参与者交换文件。</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>woof 是一个小巧且快速的局域网文件共享工具，你的伙伴可以轻松的使用信任的工具访问该文件（例如weget或是浏览器）。当然也支持发送到安卓手机。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li>下载安装woof<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install woof</span><br><span class="line">或是</span><br><span class="line">yaourt -S woof</span><br></pre></td></tr></table></figure></li></ul><h1 id="共享文件"><a href="#共享文件" class="headerlink" title="共享文件"></a>共享文件</h1><ul><li>安装完毕后，打开终端。</li></ul><blockquote><p>这里假如我要通过 <strong>8000端口</strong> 发送一个文件 <strong>x</strong>，这个文件的路径是 ~/dist/x</p></blockquote><ul><li><p>终端输入：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo woof -<span class="selector-tag">p</span> <span class="number">8000</span> ~/dist/x</span><br></pre></td></tr></table></figure></li><li><p>将会显示如下地址：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Now serving <span class="keyword">on</span> http:<span class="comment">//172.168.1.102:8000/x</span></span><br></pre></td></tr></table></figure></li><li><p>在浏览器中输入地址 <code>http://172.168.1.102:8000/x</code> 就可以下载文件了。</p></li></ul><h1 id="具体用法"><a href="#具体用法" class="headerlink" title="具体用法"></a>具体用法</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">woof [-i <span class="tag">&lt;<span class="name">ip_addr</span>&gt;</span>] [-p <span class="tag">&lt;<span class="name">port</span>&gt;</span>] [-c <span class="tag">&lt;<span class="name">count</span>&gt;</span>] <span class="tag">&lt;<span class="name">file</span>&gt;</span></span><br><span class="line">woof [-i <span class="tag">&lt;<span class="name">ip_addr</span>&gt;</span>] [-p <span class="tag">&lt;<span class="name">port</span>&gt;</span>] [-c <span class="tag">&lt;<span class="name">count</span>&gt;</span>] [-z|-j|-Z|-u] <span class="tag">&lt;<span class="name">dir</span>&gt;</span></span><br><span class="line">woof [-i <span class="tag">&lt;<span class="name">ip_addr</span>&gt;</span>] [-p <span class="tag">&lt;<span class="name">port</span>&gt;</span>] [-c <span class="tag">&lt;<span class="name">count</span>&gt;</span>] -s</span><br><span class="line">woof [-i <span class="tag">&lt;<span class="name">ip_addr</span>&gt;</span>] [-p <span class="tag">&lt;<span class="name">port</span>&gt;</span>] [-c <span class="tag">&lt;<span class="name">count</span>&gt;</span>] -U</span><br><span class="line"></span><br><span class="line">woof <span class="tag">&lt;<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-i：指定地址。</span><br><span class="line">-p：指定端口。</span><br><span class="line">-c：指定服务文件次数，默认为仅1。</span><br><span class="line">-s：当指定-s而不是文件名时，woof会自行分配。</span><br><span class="line">-U：当指定-U时，woof提供上传表单，允许上传文件。</span><br><span class="line">-z|-j|-Z|-u：默认是gzip压缩的。您可以指定-z进行gzip压缩，-j用于bzip2压缩，-Z用于ZIP压缩或-u用于不压缩。</span><br></pre></td></tr></table></figure><ul><li><p>您可以在配置中配置默认​​的压缩方法。</p></li><li><p>可以在两个位置指定不同的默认值：<code>/ etc / woofrc</code> 或 <code>〜/ .woofrc</code> 可以是包含默认值的INI风格的配置文件端口和默认计数。主目录中的文件需要优先。压缩方法是“关”，“gz”，“bz2”或“zip”。</p></li><li><p>示例：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[main]</span><br><span class="line">port = 8008</span><br><span class="line">count = 2</span><br><span class="line">ip = 127.0.0.1</span><br><span class="line">compressed = gz</span><br></pre></td></tr></table></figure></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.home.unix-ag.org/simon/woof.html" target="_blank" rel="noopener">http://www.home.unix-ag.org/simon/woof.html</a></li></ul>]]></content>
      
      <categories>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>国际版 MIUI</title>
      <link href="/2018/03/27/%E5%9B%BD%E9%99%85%E7%89%88%20MIUI/"/>
      <content type="html"><![CDATA[<p>将我的红米5Plus系统刷为国际版。</p><p>折腾了1天半，总算找到了自已较为满意的版本。在此将过程记录下来。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><blockquote><p>值得注意的是整个过程需要 <strong>Windows</strong> 环境。</p><blockquote><p>更要注意的是：<strong>备份重要数据</strong>。</p></blockquote></blockquote><ol><li><p>申请解锁。<a href="http://www.miui.com/unlock/index.html" target="_blank" rel="noopener">点击这里</a>，申请小米账号解锁权限，登录你的小米账号提交申请。</p></li><li><p>申请成功后，同页面下载小米解锁工具。</p></li><li><p><a href="https://www.androidfilehost.com/?w=files&amp;flid=50678" target="_blank" rel="noopener">点击这里</a>，下载 <strong>fastboot mode</strong> ——<strong>TWRP Recovery</strong>。</p></li><li><p><a href="https://xiaomi.eu/community/forums/miui-weekly-rom-releases.103/" target="_blank" rel="noopener">点击这里</a> 下载ROM，我使用的是EU版。选择你对应的机型进行下载。有开发版和稳定版可以选择。</p></li></ol><blockquote><p>EU版是国际版的欧洲优化版本。为什么我选择了它，文章的最后我会写上。</p></blockquote><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><ol><li><p>关机；同时按住 <strong>电源键 + 音量 -</strong> ，进入<code>fastboot</code>模式。</p></li><li><p>将手机连接电脑，打开小米解锁工具，登录账号，一路同意协议后，点击 <strong>开始解锁</strong>。</p></li><li><p><strong>进入</strong> 下载好的 <strong>TWRP Recovery</strong> 文件夹中，打开命令行，依次输入：</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">fastboot</span> <span class="selector-tag">flash</span> <span class="selector-tag">recovery</span> <span class="selector-tag">twrp</span><span class="selector-class">.img</span></span><br><span class="line"><span class="selector-tag">fastboot</span> <span class="selector-tag">boot</span> <span class="selector-tag">twrp</span><span class="selector-class">.img</span></span><br></pre></td></tr></table></figure><ol><li><p>成功后手机会自动进入 <strong>TWRP</strong> ，此时会提示输入密码，也可以点击 <strong>Cancel</strong> 跳过。</p></li><li><p>点击 <strong>Setting</strong> 按钮，更改语言为简体中文，方便操作。</p></li><li><p>点击清除，清除数据。</p></li><li><p>点击 <strong>挂载</strong> ，选中 <strong>Micro SD</strong> 。</p></li><li><p>打开 <strong>我的电脑</strong> 进入设备， <strong>复制</strong>  刚刚ROM包。</p></li><li><p>手机点击 <strong>安装</strong> 按钮，选中复制好的 <strong>ROM包</strong> 进行安装。<br><br></p><blockquote><p><strong>如果显示ROM包损坏请回头检查：复制、下载 过程。</strong></p></blockquote></li></ol><ul><li>成功后点击 <strong>重启系统</strong>。</li><li>第一次启动系统时间较长，大概需要20分钟左右。</li></ul><p><br></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p>第一次刷入的是 <strong>国际稳定版</strong> ，很顺利但是版本回滚太严重，相较于 <strong>国内稳定版</strong> 缺少了很多新功能，例如 <strong>全面屏手势操作</strong> ，并且无法自动校正流量信息。</p></li><li><p>之后果断刷入 <strong>国际开发版</strong> ，但是由于不能跳过验证Google账号，也就不能进入系统，尝试多种办法无果后最终选择了 <strong>EU开发版 MIUI</strong> 。</p></li><li><p>相较于国际版，EU开发版能跳过开头的Google验证，少了谷歌全家桶，也能校正流量。</p></li></ul><hr><p><br></p><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><ul><li><a href="https://xiaomi.eu" target="_blank" rel="noopener">https://xiaomi.eu</a></li></ul>]]></content>
      
      <categories>
          
          <category> 记录集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Manjaro Linux 系统主题色配置</title>
      <link href="/2018/03/20/Arch%20Linux%20%E7%B3%BB%E7%BB%9F%E9%A2%9C%E8%89%B2%E9%85%8D%E7%BD%AE/"/>
      <content type="html"><![CDATA[<p>干掉讨厌的暗黑主题色。</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ul><li><p>自从装了Manjaro，发现整体的风格过于偏暗，本来以为仅仅是Gnome桌面的设置问题，结果并没有那么简单，一些使用<code>Qt框架</code>的软件背景仍是暗色。</p></li><li><p>查阅wiki后我意识到是Gt风格的影响。</p></li></ul><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul><li><p>安装 <code>Qt风格设置</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> pacman -S  qt5-styleplugins qt5ct</span><br></pre></td></tr></table></figure></li><li><p>终端输入 <code>qt5ct</code>，而后 <strong>更改</strong>  <code>外观</code>&gt;<code>风格</code>，点击 <code>应用</code>，重启应用就可以生效了。</p></li></ul><blockquote><p>到这一步，基本已经解决了一些软件因为基于Qt风格而产生的黑白违和问题。</p></blockquote><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="使用-dconf管理器-自定义主题色。"><a href="#使用-dconf管理器-自定义主题色。" class="headerlink" title="使用 dconf管理器 自定义主题色。"></a>使用 dconf管理器 自定义主题色。</h3><ul><li><p>安装并打开 <strong>dconf editor</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo pacman -S dconf editor</span></span><br></pre></td></tr></table></figure></li><li><p>进入 <strong>org/gnome/desktop/interface</strong></p></li><li><p>找到 <code>gtk-color-scheme</code> 自定义颜色。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">参数如下：</span><br><span class="line"></span><br><span class="line"><span class="symbol">fg_color:</span>前景色的基础。</span><br><span class="line"><span class="symbol">bg_color:</span>颜色从中生成背景颜色。</span><br><span class="line"><span class="symbol">base_color:</span>基本颜色。</span><br><span class="line"><span class="symbol">text_color:</span>输入小部件中的文本颜色。</span><br><span class="line"><span class="symbol">selected_bg_color:</span>所选文本背景的颜色。</span><br><span class="line"><span class="symbol">selected_fg_color:</span>选定文本的颜色。</span><br><span class="line"><span class="symbol">tooltip_bg_color:</span>工具提示的背景颜色。</span><br><span class="line"><span class="symbol">tooltip_fg_color:</span>工具提示中文本的文本颜色。</span><br></pre></td></tr></table></figure></li><li><p>书写格式为： <code>参数:#******;</code>  例如：</p></li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">bg_color</span>:<span class="number">#CCE8CF</span>;<span class="attribute">base_color</span>:<span class="number">#CCE8CF</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：设置的时候下面的描述信息可能为A ‘\n’ separated list of “name:color” as defined by the ‘gtk-color-scheme’ setting，这里需要注意的是使用英文的”;”而不是”\n”。</p></blockquote><h2 id="几种护眼色"><a href="#几种护眼色" class="headerlink" title="几种护眼色"></a>几种护眼色</h2><table><tr><td bgcolor="#FFFFFF">银河白    #FFFFFF   RGB(255, 255, 255)</td></tr><tr><td bgcolor="#FAF9DE">杏仁黄    #FAF9DE   RGB(250, 249, 222)</td></tr><tr><td bgcolor="#FFF2E2">秋叶褐    #FFF2E2   RGB(255, 242, 226)</td></tr><tr><td bgcolor="#FDE6E0">胭脂红    #FDE6E0   RGB(253, 230, 224)</td></tr><tr><td bgcolor="#E3EDCD">青草绿    #E3EDCD   RGB(227, 237, 205)</td></tr><tr><td bgcolor="#DCE2F1">海天蓝    #DCE2F1   RGB(220, 226, 241)</td></tr><tr><td bgcolor="#E9EBFE">葛巾紫    #E9EBFE   RGB(233, 235, 254)</td></tr><tr><td bgcolor="#EAEAEF">极光灰    #EAEAEF   RGB(234, 234, 239)</td></tr></table><p><br></p><h1 id="参考-鸣谢"><a href="#参考-鸣谢" class="headerlink" title="参考-鸣谢"></a>参考-鸣谢</h1><ul><li><a href="https://wiki.archlinux.org/index.php/Uniform_look_for_Qt_and_GTK_applications" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Uniform_look_for_Qt_and_GTK_applications</a></li><li><a href="http://blog.csdn.net/zhengqiqiqinqin/article/details/8175893" target="_blank" rel="noopener">http://blog.csdn.net/zhengqiqiqinqin/article/details/8175893</a></li></ul>]]></content>
      
      <categories>
          
          <category> 优化翩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>修改 Gnome 3 Night-light 强度值</title>
      <link href="/2018/03/19/%E4%BF%AE%E6%94%B9-Gnome-3-Night-light-%E5%BC%BA%E5%BA%A6%E5%80%BC/"/>
      <content type="html"><![CDATA[<p>使用 Night-light 以减少屏幕蓝光对眼睛的影响。</p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><ul><li><p>尤其是在夜晚，护眼模式的作用显而易见，合理、科学的使用能有效舒缓屏幕对眼睛的伤害,并让你的屏幕更加温和。</p></li><li><p>实现该功能的原理是改变屏幕色温，减少蓝光对眼睛的影响。</p></li><li><p><strong>我在使用的时候遇到了一些问题，就是色温调节过度，使得整个界面<code>过于偏红</code>。</strong></p></li></ul><ul><li>去查阅了不少资料，终于在一篇英文文献中找到了解决办法，现在把它写下来，填上这个坑。</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><ul><li><p>我们可以通过改变<code>gsettings</code>中的强度值来控制<code>Gnome 3</code> Night light Intensity（微红色调）。</p></li><li><p>为此我们安装<code>dconf编辑器</code>。</p></li></ul><ol><li><p>Ubuntu：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install dconf-editor</span><br></pre></td></tr></table></figure></li><li><p>Arch linux：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo pacman -S dconf-editor</span></span><br></pre></td></tr></table></figure></li><li><p>对于其他发行版本，使用相对应的软件安装命令。</p></li></ol><h2 id="修改参数"><a href="#修改参数" class="headerlink" title="修改参数"></a>修改参数</h2><ul><li><p>打开刚刚安装的<code>dconf编辑器</code>。</p></li><li><p>选择对应位置：</p><figure class="highlight rsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org &gt; Gnome &gt; settings-daemon &gt; plugins &gt; <span class="keyword">color</span> &gt; night-<span class="class"><span class="keyword">light</span>-temperature</span></span><br></pre></td></tr></table></figure></li><li><p>关闭默认值并在下面给出的框中输入自定义值。</p></li></ul><p><img src="/img/imgQ/gnome.png" alt="SZ"></p><h3 id="温度值："><a href="#温度值：" class="headerlink" title="温度值："></a>温度值：</h3><blockquote><ul><li>1000最低值（全红）</li><li>4000默认夜间照明温度</li><li>5500更好，不太强烈的夜间温度</li><li>6500默认温度（夜灯关闭）</li><li>10000最高值（全蓝） </li></ul></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>推荐使用5500左右的温度值，但仍以你的个人感受为准。</p></li><li><p>虽然该功能有效的舒缓了你的眼睛，但仍不能完全抵御屏幕对你健康的损害，请注意休息。</p></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://smashingweb.info/gnome-3-night-light-intensity/" target="_blank" rel="noopener">http://smashingweb.info/gnome-3-night-light-intensity/</a></li></ul>]]></content>
      
      <categories>
          
          <category> 优化翩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>oh-my-zsh + zsh 强大的终端环境</title>
      <link href="/2018/03/14/oh-my-zsh-%E9%85%8D%E7%BD%AEzsh-%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83/"/>
      <content type="html"><![CDATA[<p>人生苦短，我用zsh.</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>zsh 是一个强大的 bash 替代，而 oh-my-zsh 是 zsh 的一键式配置工具，尤其是配合一些插件，功能强大，好用又便捷。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li><p>我们看一下系统内置了几种shell：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">/etc/shells</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># /etc/shells</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="string">/bin/sh</span></span><br><span class="line"><span class="string">/bin/bash</span></span><br></pre></td></tr></table></figure></li><li><p>我的电脑现在仅仅只有2种；<code>sh</code>和<code>bash</code>。</p></li></ul><blockquote><ol><li>当然如果你使用的是Mac，你会发现多了一个zsh，也就是说OSX系统预装了zsh。<br></li><li>目前大部分的Linux和OSX系统默认使用bash；其实真正强大的shell是深藏不漏的zsh，史称<code>终极Shell</code>，但是由于配置过于复杂，很多人看了几分钟的zsh使用指南，什么都没说直接关了网页走了。直到有一天，oh-my-zsh被一个程序员做了出来，速成突然变成了可能。</li></ol></blockquote><h2 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h2><ul><li><p>Ubuntu用户可以在终端运行：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install zsh zsh-completions</span><br></pre></td></tr></table></figure></li><li><p>使用pacman包管理器的用户可以：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo pacman -S zsh zsh-completions</span></span><br></pre></td></tr></table></figure></li><li><p>zsh-completions 包是用以增强zsh的补全功能。</p></li><li>mac系统下无需安装。</li></ul><h3 id="下载oh-my-zsh"><a href="#下载oh-my-zsh" class="headerlink" title="下载oh-my-zsh"></a>下载oh-my-zsh</h3><ul><li><p>weget安装：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/robbyrussell/</span>oh-my-zsh<span class="regexp">/raw/m</span>aster<span class="regexp">/tools/i</span>nstall.sh -O - | sh</span><br></pre></td></tr></table></figure></li><li><p>执行后自动读取系统环境变量并自动进行zsh配置。</p></li></ul><blockquote><p>切换到zsh<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>zsh</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li><p>zsh配置文件在用户当前目录下的<code>.zshrc</code>中，打开它：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ～<span class="string">/.zshrc</span></span><br></pre></td></tr></table></figure></li><li><p>我们可以修改这个参数来自定义主题</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ZSH_THEME</span>=<span class="string">"robbyrussell"</span></span><br></pre></td></tr></table></figure></li><li><p>robbyrussell 是主题名。&gt;可挑选你喜欢的主题。</p></li></ul><h3 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h3><blockquote><p>在<code>.zshrc</code>文件中加入插件的名字，即可启动插件：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>=( [plugins...] )</span><br></pre></td></tr></table></figure></p></blockquote><ul><li>cp：显示复制进度。</li><li>git：默认开启的插件，提供了大量 git 的alias。<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git。" target="_blank" rel="noopener">详情</a></li><li>extract:功能强大的解压插件，所有类型的文件解压一个命令<code>x</code>全搞定，再也不需要去记tar后面到底是哪几个参数了。</li><li>z：强大的目录自动跳转命令，会记忆你曾经进入过的目录，用模糊匹配快速进入你想要的目录。</li></ul><hr><h3 id="一些实用的，非自带插件"><a href="#一些实用的，非自带插件" class="headerlink" title="一些实用的，非自带插件"></a>一些实用的，非自带插件</h3><ul><li><code>zsh-syntax-highlighting</code>：高亮你的zsh命令，正确显示绿色，错误显示红色。<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/zsh-users/</span>zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span><span class="regexp">/plugins/</span>zsh-syntax-highlighting</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>zsh-autosuggestions</code>:自动匹配你历史的输入命令。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git:<span class="regexp">//gi</span>thub.com<span class="regexp">/zsh-users/</span>zsh-autosuggestions <span class="variable">$ZSH_CUSTOM</span><span class="regexp">/plugins/</span>zsh-autosuggestions</span><br></pre></td></tr></table></figure></li><li><p>同样在<code>.zshrc</code> 文件中加入 <code>plugins=(... zsh-syntax-highlighting zsh-autosuggestions)</code></p></li><li>保存退出，并运行<code>source ./zshrc</code>，更新一下zsh，当然你也可以重新打开命令行，就可以享受zsh给你带来的便捷了。</li></ul><h2 id="设置命令别名，让输入更便捷"><a href="#设置命令别名，让输入更便捷" class="headerlink" title="设置命令别名，让输入更便捷"></a>设置命令别名，让输入更便捷</h2><ul><li><p>还是找到zsh的配置文件<code>.zshrc</code>，（～/.zshrc），添加命令别名：</p><blockquote><p>例如：<code>alias install=&quot;sudo apt-get install&quot;</code></p></blockquote></li><li><p>应用配置文件，使配置生效 <code>source ～/.zshrc</code></p></li><li><p>查看当前shell现有别名，终端下输入：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ <span class="built_in">alias</span></span><br></pre></td></tr></table></figure></li><li><p>Bash 里一些常用的别名：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> la=<span class="string">'ls -Fa'</span>          <span class="comment"># 列出所有文件</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">'ls -Fls'</span>         <span class="comment"># 列出文件详细信息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> rm=<span class="string">'rm -i'</span>           <span class="comment"># 删除前需确认</span></span><br><span class="line"><span class="built_in">alias</span> cp=<span class="string">'cp -i'</span>           <span class="comment"># 覆盖前需确认</span></span><br><span class="line"><span class="built_in">alias</span> mv=<span class="string">'mv -i'</span>           <span class="comment"># 覆盖前需确认</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> vi=<span class="string">'vim'</span>             <span class="comment"># 输入 vi 命令时使用 vim 编辑器</span></span><br></pre></td></tr></table></figure><h1 id="参考-鸣谢"><a href="#参考-鸣谢" class="headerlink" title="参考-鸣谢"></a>参考-鸣谢</h1><hr><ul><li><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins-Overview" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins-Overview</a></li><li><a href="http://macshuo.com/?p=676" target="_blank" rel="noopener">http://macshuo.com/?p=676</a></li><li><a href="https://wiki.archlinux.org/index.php/Zsh" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Zsh</a></li><li><a href="https://xiaotaoist.github.io" target="_blank" rel="noopener">https://xiaotaoist.github.io</a></li><li><a href="http://blog.csdn.net/u012801337/article/details/47132501" target="_blank" rel="noopener">http://blog.csdn.net/u012801337/article/details/47132501</a></li></ul>]]></content>
      
      <categories>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>拥抱Disqus</title>
      <link href="/2018/03/12/%E6%8B%A5%E6%8A%B1Disqus/"/>
      <content type="html"><![CDATA[<p>评论系统是互动不可缺少的一部分，沟通同样也是桥梁。为博客搭建一个可靠的评论系统，我选择了Disqus。</p><hr><h1 id="申请Disqus账号"><a href="#申请Disqus账号" class="headerlink" title="申请Disqus账号"></a>申请Disqus账号</h1><ul><li>点击<a href="https://disqus.com/" target="_blank" rel="noopener">这里</a>进入Disqus的官网，注册登录，这里可以选择Facebook、Twitter账号的快速登录，当然你同样可以使用邮箱注册登录。</li></ul><h2 id="配置Disqus"><a href="#配置Disqus" class="headerlink" title="配置Disqus"></a>配置Disqus</h2><ul><li>登录后，点击首页的 GET STARTED 按钮，之后选择 I want to install Disqus on my site 选项。</li></ul><ol><li><p><code>Websit Name</code> 就是 short name 自己填写,这个在配置 Hexo 的时候需要用到。</p></li><li><p><code>Category</code> 选择种类，可以随便选<br></p></li><li><p><code>Language</code> 语言选 Chinese 或者 English <br></p></li><li><p>点击<code>Create Site</code> 等待界面跳转。<br></p></li><li><p>接下来在页面的左侧点击 Configure Disqus<br></p></li></ol><ul><li>在<code>Website URL</code> 那里填写自己的博客地址，Description 可以不写，然后点 <code>Complete Setup</code>，Disqus 基本的设置就完成了。</li></ul><h1 id="配置-Hexo"><a href="#配置-Hexo" class="headerlink" title="配置 Hexo"></a>配置 Hexo</h1><ul><li>在<strong>主题配置文件</strong>中，填写 <code>comment: use:</code>字段，值设置为 <code>disqus</code> 或 <code>disqus_click。</code></li></ul><blockquote><p>使用<code>Disqus_Click</code> 时，文章页面不会主动加载<code>Disqus</code> 评论，直到按下按钮。这项设置有助于改善浏览者的体验。</p></blockquote><ul><li>在 <code>comment: shortname:</code>填入你的 <code>Disqus shortname</code></li></ul><hr><ul><li>需要注意的是此处的 <code>shortname</code>不是你的登录的 id，是你的评论二级域名去掉 <code>.duoshuo.com</code> 或 <code>.disqus.com</code>部分.</li></ul><blockquote><p>例如：Disqus 域名 example.disqus.com</p></blockquote><p>则输入：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">shortname:</span> example</span><br></pre></td></tr></table></figure><hr><p>然后执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g &amp;&amp; hexo s</span></span><br></pre></td></tr></table></figure><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><hr><ul><li><a href="https://www.jianshu.com/p/c4f65ebe23ad" target="_blank" rel="noopener">https://www.jianshu.com/p/c4f65ebe23ad</a></li><li><a href="https://material.viosey.com/docs/#/" target="_blank" rel="noopener">https://material.viosey.com/docs/#/</a></li></ul>]]></content>
      
      <categories>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为Hexo优化</title>
      <link href="/2018/03/08/%E4%B8%BAHexo%E4%BC%98%E5%8C%96/"/>
      <content type="html"><![CDATA[<p>搭建完基本的框架，来为自己博客的美观和便捷性，做点功课。</p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><blockquote><p>在本文中，假定你已经成功安装了 Hexo，并根据 Hexo 的文档创建了一个站点，并完成了基本的设置。</p></blockquote><ul><li>在 Hexo 中，通常有两份配置文件，一个是站点根目录下的 <code>_config.yaml</code>；另外一个是主题目录下的<code>_config.yaml</code>。 为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>，后者称为 <strong>主题配置文件</strong>。</li></ul><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><ul><li>在Hexo框架下更换主题变得异常简单，只要将主题文件下载并且放置到<strong>站点目录</strong>的<code>themes</code>文件夹下，然后修改一下配置文件即可。你可以从Github上找到这些<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">主题</a>。</li></ul><h2 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h2><ul><li>克隆完成后，修改主题文件夹名称，将其自定义为 <code>***</code>。 然后打开 站点配置文件，找到 <code>theme</code>字段，并将其值更改为 <code>***</code> 。</li></ul><blockquote><p>文件夹名称可自由修改，并不是唯一的，只需 <code>theme</code>字段与之对应即可。</p></blockquote><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><hr><ul><li>为防止造成冲突，主题以<code>_config.template.yaml</code>文件取代<code>_config.yaml</code>文件，用以参考配置。 需要手动将 <code>material</code> 文件夹中的 <code>_config.template.yaml</code>复制一份并重命名为<code>_config.yaml</code>。</li></ul><hr><h2 id="主题基本配置"><a href="#主题基本配置" class="headerlink" title="主题基本配置"></a>主题基本配置</h2><h3 id="Language"><a href="#Language" class="headerlink" title="Language"></a>Language</h3><ul><li>编辑 <strong>站点配置文件</strong>，将 <code>language</code>设置成你所需要的语言。</li></ul><blockquote><p>例如：选用简体中文，则配置为：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">language:</span> <span class="built_in">zh</span>-CN</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="Head"><a href="#Head" class="headerlink" title="Head"></a>Head</h2><p> <strong>用于配置生成的 HTML 文件的头部信息。</strong></p><ul><li><code>favicon</code>: 网站的 favicon</li><li><code>high_res_favicon</code>: 高清 favicon</li><li><code>keywords</code>: 网站关键词</li><li><code>site_verification</code>: 搜索引擎验证</li></ul><h1 id="更方便的与Github关联"><a href="#更方便的与Github关联" class="headerlink" title="更方便的与Github关联"></a>更方便的与Github关联</h1><ul><li>使用 ssh实现与github的免密上传。</li></ul><hr><h2 id="生成ssh的密钥文件"><a href="#生成ssh的密钥文件" class="headerlink" title="生成ssh的密钥文件"></a>生成ssh的密钥文件</h2><p>在命令行中输入<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ecdsa -<span class="selector-tag">b</span> <span class="number">256</span> -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure></p><ul><li>这行命令将会生成一个以<a href="mailto:your_email@example.com" target="_blank" rel="noopener">your_email@example.com</a>为标签的ssh key，接着bash会显示：</li></ul><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa <span class="keyword">key</span> pair. Enter file <span class="keyword">in</span> which <span class="keyword">to</span> save the <span class="keyword">key</span> (/c/Users/you/.ssh/id_rsa): [Press enter]</span><br></pre></td></tr></table></figure><ul><li>如果想要为私钥设置密码，请设置密码，如果不想设置则直接回车然后出现：</li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): [<span class="keyword">Type</span> <span class="type">a </span>passphrase] Enter same passphrase again: [<span class="keyword">Type</span> <span class="type">passphrase </span>again]</span><br></pre></td></tr></table></figure><ul><li>再次确认你的密码，或两次回车设置为空</li></ul><blockquote><p>ssh-keygen 有如几种参数： <br>1. -t 为指定加密算法类型，支持rsa，dsa，ecdsa。<br>2. -b 指定密钥大小。<br>3. -f 指定生成密钥保存位置与名称。 <br>4. -C 添加注释。默认为本机主机名和用户。</p></blockquote><h2 id="将ssh-Key-添加到github上"><a href="#将ssh-Key-添加到github上" class="headerlink" title="将ssh Key 添加到github上"></a>将ssh Key 添加到github上</h2><ol><li>将本地生成的公钥 <code>id_rsa.pub</code>中的内容复制下来。<br>2.打开<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a>  并且登录，点击Add ssh Key，将复制的内容粘贴到Key框中，在Title框中可以输入自己方便记忆的名字。</li><li><p>当网页显示添加成功后，打开命令行输入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> ‐<span class="selector-tag">T</span> <span class="selector-tag">git</span>@<span class="keyword">github</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure></li><li><p>命令行出现以下回执：<code>Are you sure you want to continue connecting (yes/no)?</code></p></li><li><p>输入yes后如果看到:</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You<span class="symbol">'ve</span> successfully authenticated, but GitHub does <span class="keyword">not</span> provide shell <span class="keyword">access</span>.</span><br></pre></td></tr></table></figure></li><li><p>成功显示如上文字就说明成功了，如果出现错误提示请仔细检查自己的操作。</p></li></ol><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><ul><li><p>修改<strong>站点配置文件</strong>，中的<code>_config.yml</code>，将部署方式从https方式修改为ssh方式。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> https:<span class="comment">//github.com/minifullc/minifullc.github.io.git</span></span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure></li><li><p>修改为:</p></li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Deployment</span></span><br><span class="line"><span class="meta">## Docs: https:<span class="comment">//hexo.io/docs/deployment.html</span></span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> git@github.com:MiniFullC/MiniFullC.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><p>  <br></p><p>  参考</p><hr><ul><li><a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></li><li><a href="https://xiaotaoist.github.io/" target="_blank" rel="noopener">https://xiaotaoist.github.io/</a></li><li><a href="https://material.viosey.com/docs/#/" target="_blank" rel="noopener">https://material.viosey.com/docs/#/</a></li></ul>]]></content>
      
      <categories>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>利用Hexo+Github 搭建博客</title>
      <link href="/2018/03/07/Hexo+Github%20%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <content type="html"><![CDATA[<p>万事开头难，第一次总是让人既困惑又欣喜。踏出第一步，远比空想有意义的多。</p><h1 id="始建之初"><a href="#始建之初" class="headerlink" title="始建之初"></a>始建之初</h1><hr><p>搭建博客的想法来自于一个朋友的鼓舞，谨以本文来记念这次“美好的旅程”。本人利用Github+Hexo来搭建了这个博客，在此过程中无论是环境搭建还是功能配置都占据了我不少的时间，踩中了不少坑，希望本文能做个好的开始，并记录下中过程中遇到的相关问题。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载node.js，npm 并安装。</li><li>下载git。</li></ul><ol><li><p>在Ubuntu下可以打开终端输入：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install nodejs npm git</span><br></pre></td></tr></table></figure></li><li><p>使用Arch Linux用户可以输入：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S nodejs npm git</span><br><span class="line">或</span><br><span class="line">sudo yaourt -S <span class="keyword">node</span> <span class="title">js</span> npm git`</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>Windows 用户可自行搜索安装。</p></blockquote><h2 id="检查安装"><a href="#检查安装" class="headerlink" title="检查安装"></a>检查安装</h2><ul><li>在终端下，输入 <em>node -v</em> ， <em>npm -v</em> ，<em>git –version</em></li><li>如果都成功显示版本号，则说明安装正确，可以进行下一步操作了，如果不正确，请回头检查安装过程。</li></ul><h2 id="在本地搭建hexo博客"><a href="#在本地搭建hexo博客" class="headerlink" title="在本地搭建hexo博客"></a>在本地搭建hexo博客</h2><ul><li>新建一个文件夹，自定义文件夹的名称，如 Blog。</li><li><p>在命令行中 输入：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">cli</span> -g</span><br></pre></td></tr></table></figure></li><li><p>回车后会出现<code>WARN</code>，不用担心不会影响使用。</p></li><li>接下在你就会看到命令行窗口刷下了一大堆白字，下面我们来看一看Hexo是不是已经安装成功了。在命令行中输入：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo -v</span></span><br></pre></td></tr></table></figure><ul><li>如果成功显示Hexo的版本信息并且识别成功了你的本地计算机配置，则说明已经安装成功了。</li></ul><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><ul><li>成功安装Hexo后，进入刚才新建的文件夹 Blog，在命令行中输入：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo init</span></span><br></pre></td></tr></table></figure><ul><li>紧接着输入：</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure><ul><li>之后npm将自动安装所需要的组件，这需要点时间，耐心等一会哦。</li><li>当组件安装完成后，连续输入两行指令：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure><ul><li>然后会提示一行指令：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  <span class="keyword">Start</span> processing</span><br><span class="line">INFO  Hexo <span class="keyword">is</span> running <span class="keyword">at</span> <span class="keyword">http</span>://localhost:<span class="number">4000</span>/. Press Ctrl+C <span class="keyword">to</span> stop.</span><br></pre></td></tr></table></figure><ul><li>在浏览器中打开这个链接：<code>http://localhost:4000/</code>，成功显示Hexo的默认模板。</li><li>到目前为止，Hexo在本地的配置已经全都结束了。</li></ul><hr><h2 id="将本地博客与Github关联"><a href="#将本地博客与Github关联" class="headerlink" title="将本地博客与Github关联"></a>将本地博客与Github关联</h2><ul><li>在Github上创建名字为xxx.github.io的项目，XXX是自己GIthub的用户名。</li><li><p>打开本地的Blog文件夹内的<em>_config.yml</em> 配置文件，将其中的type设置为git，并且在<em>repository：</em> 后写上自己Github的项目地址。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy:</span></span><br><span class="line"><span class="string">type:</span> git</span><br><span class="line"><span class="string">repository:</span> <span class="string">https:</span><span class="comment">//github.com/MiniFullC/MiniFullC.github.io.git</span></span><br><span class="line"><span class="string">branch:</span> master</span><br></pre></td></tr></table></figure></li><li><p>保存后运行：<em>npm install hexo-deployer-git –save</em></p></li><li>运行：<em>hexo g</em> （生成本地静态文件）</li><li>运行：<em>hexo d</em> （将本地静态文件推送到Github上）</li><li>此时hexo将会自动将本地的文件向github提交请求，接下来就会让你输入你github上的帐号和密码，输入正确后就会开始同步。</li></ul><h2 id="查看自己的博客"><a href="#查看自己的博客" class="headerlink" title="查看自己的博客"></a>查看自己的博客</h2><ul><li>上面你已经在github上按照规范输入了博客地址，<code>xxx.github.io</code>，这就是你的主页啦，基本的配置和上传已经成功了，接下来就来写一篇自己的博文吧！</li></ul><hr><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><ul><li>打开Hexo目录，找到<code>source</code>文件夹，所有的文章都会以Markdown形式保存在<code>_post</code>文件夹中。</li><li>好了知道了文章的存储地点那么如何快速的新建一个文章呢？</li><li>在Hexo站点目录下右键打开命令行，输入 </li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type"></span>“***”</span><br></pre></td></tr></table></figure><ul><li>***是你自定义文章的名字我们发现站点根目录下的<code>source</code>文件夹中的 <code>_post</code> 文件夹中多了一个<code>XXX.md</code>的文件，使用Markdown编辑器打开</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">hello-world</span>   <span class="string">//在此处添加你的标题。</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014</span><span class="bullet">-11</span><span class="bullet">-7</span> <span class="number">08</span><span class="string">:55:29</span>   <span class="string">//在此处输入你编辑这篇文章的时间。</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Exercise</span>   <span class="string">//在此处输入这篇文章的分类。</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span>  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">//在此处输入这篇文章的内容。</span></span><br></pre></td></tr></table></figure><ul><li>保存后，运行命令<code>hexo g</code>就可以进行渲染了。</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><ul><li>完成了以上所有的步骤后，一个基础简单的博客就搭建成功了！</li></ul>]]></content>
      
      <categories>
          
          <category> 技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
